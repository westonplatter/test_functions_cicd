name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres_password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip install
      id: cache-pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: |
          ${{ runner.os }}-\
          pip-\
          ${{ hashFiles('functions/requirements.txt') }}-\
          ${{ hashFiles('functions/dev-requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      if: ${{steps.cache-pip.outputs.cache-hit}} != 'true'
      run: |
        python -m pip install --upgrade pip
        if [ -f functions/requirements.txt ]; then pip install -r functions/requirements.txt; fi
        if [ -f functions/dev-requirements.txt ]; then pip install -r functions/dev-requirements.txt; fi
    - name: Test with pytest
      run: |
        from sqlalchemy import create_engine

        cnx_str = "postgres://postgres:postgres_password@postgres:5432/postgres"
        engine = create_engine(cnx_str)

        with engine.connect() as con:
          rs = con.execute("SELECT table_name FROM information_schema.tables")
          for row in rs:
              print(row)
